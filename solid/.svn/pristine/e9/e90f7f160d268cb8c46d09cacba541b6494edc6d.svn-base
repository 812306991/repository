package cn.yufei.ssm.system.core.data;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JavaType;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import cn.yufei.ssm.system.dal.object.Entity;



public class CollectingData {
	
	private static CollectingData collectingData=null;
	
	private CollectingData(){
		// 将构造方法私有
	}
	public static CollectingData getInstance(){
		if(collectingData==null){
			collectingData=new CollectingData();
		}
		return collectingData;
	}
	public  Entity getEntity(String json,Class<Entity> calzz) throws JsonParseException, JsonMappingException, IOException {
		ObjectMapper mapper=new ObjectMapper();
		Entity readValue = mapper.readValue(json,calzz);
		return readValue;
	}
	
	public  List<Entity> getListEntity(String json,Class<Entity> calzz) throws JsonParseException, JsonMappingException, IOException{
		ObjectMapper mapper=new ObjectMapper();
		JavaType javaType=this.getCollectionType(ArrayList.class,calzz);
		return mapper.readValue(json,javaType);
	}
	
	private  JavaType getCollectionType(Class<?> collectionClass, Class<?>... elementClasses) {   
		ObjectMapper mapper=new ObjectMapper();     
		return mapper.getTypeFactory().constructParametricType(collectionClass, elementClasses);   
	}
	
	public static void main(String[] args) {
		CollectingData emperor1 = CollectingData.getInstance();
		//emperor1.getEntity(json, calzz)
	}
}
