<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yufei.ssm.system.mapper.SysOporgMapper" >
  <resultMap id="BaseResultMap" type="cn.yufei.ssm.system.po.SysOporg" >
    <id column="SID" property="sid" jdbcType="VARCHAR" />
    <result column="SNAME" property="sname" jdbcType="VARCHAR" />
    <result column="SCODE" property="scode" jdbcType="VARCHAR" />
    <result column="SLONGNAME" property="slongname" jdbcType="VARCHAR" />
    <result column="SFNAME" property="sfname" jdbcType="VARCHAR" />
    <result column="SFCODE" property="sfcode" jdbcType="VARCHAR" />
    <result column="SFID" property="sfid" jdbcType="VARCHAR" />
    <result column="SORGKINDID" property="sorgkindid" jdbcType="VARCHAR" />
    <result column="SSEQUENCE" property="ssequence" jdbcType="VARCHAR" />
    <result column="SVALIDSTATE" property="svalidstate" jdbcType="DECIMAL" />
    <result column="SPARENT" property="sparent" jdbcType="VARCHAR" />
    <result column="SLEVEL" property="slevel" jdbcType="DECIMAL" />
    <result column="SPHONE" property="sphone" jdbcType="VARCHAR" />
    <result column="SFAX" property="sfax" jdbcType="VARCHAR" />
    <result column="SADDRESS" property="saddress" jdbcType="VARCHAR" />
    <result column="SZIP" property="szip" jdbcType="VARCHAR" />
    <result column="SDESCRIPTION" property="sdescription" jdbcType="VARCHAR" />
    <result column="SPERSONID" property="spersonid" jdbcType="VARCHAR" />
    <result column="SNODEKIND" property="snodekind" jdbcType="VARCHAR" />
    <result column="VERSION" property="version" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SID, SNAME, SCODE, SLONGNAME, SFNAME, SFCODE, SFID, SORGKINDID, SSEQUENCE, SVALIDSTATE, 
    SPARENT, SLEVEL, SPHONE, SFAX, SADDRESS, SZIP, SDESCRIPTION, SPERSONID, SNODEKIND, 
    VERSION
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.yufei.ssm.system.po.SysOporgExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SYS_OPORG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_OPORG
    where SID = #{sid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SYS_OPORG
    where SID = #{sid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yufei.ssm.system.po.SysOporgExample" >
    delete from SYS_OPORG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yufei.ssm.system.po.SysOporg" >
    insert into SYS_OPORG (SID, SNAME, SCODE, 
      SLONGNAME, SFNAME, SFCODE, 
      SFID, SORGKINDID, SSEQUENCE, 
      SVALIDSTATE, SPARENT, SLEVEL, 
      SPHONE, SFAX, SADDRESS, 
      SZIP, SDESCRIPTION, SPERSONID, 
      SNODEKIND, VERSION)
    values (#{sid,jdbcType=VARCHAR}, #{sname,jdbcType=VARCHAR}, #{scode,jdbcType=VARCHAR}, 
      #{slongname,jdbcType=VARCHAR}, #{sfname,jdbcType=VARCHAR}, #{sfcode,jdbcType=VARCHAR}, 
      #{sfid,jdbcType=VARCHAR}, #{sorgkindid,jdbcType=VARCHAR}, #{ssequence,jdbcType=VARCHAR}, 
      #{svalidstate,jdbcType=DECIMAL}, #{sparent,jdbcType=VARCHAR}, #{slevel,jdbcType=DECIMAL}, 
      #{sphone,jdbcType=VARCHAR}, #{sfax,jdbcType=VARCHAR}, #{saddress,jdbcType=VARCHAR}, 
      #{szip,jdbcType=VARCHAR}, #{sdescription,jdbcType=VARCHAR}, #{spersonid,jdbcType=VARCHAR}, 
      #{snodekind,jdbcType=VARCHAR}, #{version,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.yufei.ssm.system.po.SysOporg" >
    insert into SYS_OPORG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        SID,
      </if>
      <if test="sname != null" >
        SNAME,
      </if>
      <if test="scode != null" >
        SCODE,
      </if>
      <if test="slongname != null" >
        SLONGNAME,
      </if>
      <if test="sfname != null" >
        SFNAME,
      </if>
      <if test="sfcode != null" >
        SFCODE,
      </if>
      <if test="sfid != null" >
        SFID,
      </if>
      <if test="sorgkindid != null" >
        SORGKINDID,
      </if>
      <if test="ssequence != null" >
        SSEQUENCE,
      </if>
      <if test="svalidstate != null" >
        SVALIDSTATE,
      </if>
      <if test="sparent != null" >
        SPARENT,
      </if>
      <if test="slevel != null" >
        SLEVEL,
      </if>
      <if test="sphone != null" >
        SPHONE,
      </if>
      <if test="sfax != null" >
        SFAX,
      </if>
      <if test="saddress != null" >
        SADDRESS,
      </if>
      <if test="szip != null" >
        SZIP,
      </if>
      <if test="sdescription != null" >
        SDESCRIPTION,
      </if>
      <if test="spersonid != null" >
        SPERSONID,
      </if>
      <if test="snodekind != null" >
        SNODEKIND,
      </if>
      <if test="version != null" >
        VERSION,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sid != null" >
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="sname != null" >
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="scode != null" >
        #{scode,jdbcType=VARCHAR},
      </if>
      <if test="slongname != null" >
        #{slongname,jdbcType=VARCHAR},
      </if>
      <if test="sfname != null" >
        #{sfname,jdbcType=VARCHAR},
      </if>
      <if test="sfcode != null" >
        #{sfcode,jdbcType=VARCHAR},
      </if>
      <if test="sfid != null" >
        #{sfid,jdbcType=VARCHAR},
      </if>
      <if test="sorgkindid != null" >
        #{sorgkindid,jdbcType=VARCHAR},
      </if>
      <if test="ssequence != null" >
        #{ssequence,jdbcType=VARCHAR},
      </if>
      <if test="svalidstate != null" >
        #{svalidstate,jdbcType=DECIMAL},
      </if>
      <if test="sparent != null" >
        #{sparent,jdbcType=VARCHAR},
      </if>
      <if test="slevel != null" >
        #{slevel,jdbcType=DECIMAL},
      </if>
      <if test="sphone != null" >
        #{sphone,jdbcType=VARCHAR},
      </if>
      <if test="sfax != null" >
        #{sfax,jdbcType=VARCHAR},
      </if>
      <if test="saddress != null" >
        #{saddress,jdbcType=VARCHAR},
      </if>
      <if test="szip != null" >
        #{szip,jdbcType=VARCHAR},
      </if>
      <if test="sdescription != null" >
        #{sdescription,jdbcType=VARCHAR},
      </if>
      <if test="spersonid != null" >
        #{spersonid,jdbcType=VARCHAR},
      </if>
      <if test="snodekind != null" >
        #{snodekind,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yufei.ssm.system.po.SysOporgExample" resultType="java.lang.Integer" >
    select count(*) from SYS_OPORG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SYS_OPORG
    <set >
      <if test="record.sid != null" >
        SID = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.sname != null" >
        SNAME = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.scode != null" >
        SCODE = #{record.scode,jdbcType=VARCHAR},
      </if>
      <if test="record.slongname != null" >
        SLONGNAME = #{record.slongname,jdbcType=VARCHAR},
      </if>
      <if test="record.sfname != null" >
        SFNAME = #{record.sfname,jdbcType=VARCHAR},
      </if>
      <if test="record.sfcode != null" >
        SFCODE = #{record.sfcode,jdbcType=VARCHAR},
      </if>
      <if test="record.sfid != null" >
        SFID = #{record.sfid,jdbcType=VARCHAR},
      </if>
      <if test="record.sorgkindid != null" >
        SORGKINDID = #{record.sorgkindid,jdbcType=VARCHAR},
      </if>
      <if test="record.ssequence != null" >
        SSEQUENCE = #{record.ssequence,jdbcType=VARCHAR},
      </if>
      <if test="record.svalidstate != null" >
        SVALIDSTATE = #{record.svalidstate,jdbcType=DECIMAL},
      </if>
      <if test="record.sparent != null" >
        SPARENT = #{record.sparent,jdbcType=VARCHAR},
      </if>
      <if test="record.slevel != null" >
        SLEVEL = #{record.slevel,jdbcType=DECIMAL},
      </if>
      <if test="record.sphone != null" >
        SPHONE = #{record.sphone,jdbcType=VARCHAR},
      </if>
      <if test="record.sfax != null" >
        SFAX = #{record.sfax,jdbcType=VARCHAR},
      </if>
      <if test="record.saddress != null" >
        SADDRESS = #{record.saddress,jdbcType=VARCHAR},
      </if>
      <if test="record.szip != null" >
        SZIP = #{record.szip,jdbcType=VARCHAR},
      </if>
      <if test="record.sdescription != null" >
        SDESCRIPTION = #{record.sdescription,jdbcType=VARCHAR},
      </if>
      <if test="record.spersonid != null" >
        SPERSONID = #{record.spersonid,jdbcType=VARCHAR},
      </if>
      <if test="record.snodekind != null" >
        SNODEKIND = #{record.snodekind,jdbcType=VARCHAR},
      </if>
      <if test="record.version != null" >
        VERSION = #{record.version,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SYS_OPORG
    set SID = #{record.sid,jdbcType=VARCHAR},
      SNAME = #{record.sname,jdbcType=VARCHAR},
      SCODE = #{record.scode,jdbcType=VARCHAR},
      SLONGNAME = #{record.slongname,jdbcType=VARCHAR},
      SFNAME = #{record.sfname,jdbcType=VARCHAR},
      SFCODE = #{record.sfcode,jdbcType=VARCHAR},
      SFID = #{record.sfid,jdbcType=VARCHAR},
      SORGKINDID = #{record.sorgkindid,jdbcType=VARCHAR},
      SSEQUENCE = #{record.ssequence,jdbcType=VARCHAR},
      SVALIDSTATE = #{record.svalidstate,jdbcType=DECIMAL},
      SPARENT = #{record.sparent,jdbcType=VARCHAR},
      SLEVEL = #{record.slevel,jdbcType=DECIMAL},
      SPHONE = #{record.sphone,jdbcType=VARCHAR},
      SFAX = #{record.sfax,jdbcType=VARCHAR},
      SADDRESS = #{record.saddress,jdbcType=VARCHAR},
      SZIP = #{record.szip,jdbcType=VARCHAR},
      SDESCRIPTION = #{record.sdescription,jdbcType=VARCHAR},
      SPERSONID = #{record.spersonid,jdbcType=VARCHAR},
      SNODEKIND = #{record.snodekind,jdbcType=VARCHAR},
      VERSION = #{record.version,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yufei.ssm.system.po.SysOporg" >
    update SYS_OPORG
    <set >
      <if test="sname != null" >
        SNAME = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="scode != null" >
        SCODE = #{scode,jdbcType=VARCHAR},
      </if>
      <if test="slongname != null" >
        SLONGNAME = #{slongname,jdbcType=VARCHAR},
      </if>
      <if test="sfname != null" >
        SFNAME = #{sfname,jdbcType=VARCHAR},
      </if>
      <if test="sfcode != null" >
        SFCODE = #{sfcode,jdbcType=VARCHAR},
      </if>
      <if test="sfid != null" >
        SFID = #{sfid,jdbcType=VARCHAR},
      </if>
      <if test="sorgkindid != null" >
        SORGKINDID = #{sorgkindid,jdbcType=VARCHAR},
      </if>
      <if test="ssequence != null" >
        SSEQUENCE = #{ssequence,jdbcType=VARCHAR},
      </if>
      <if test="svalidstate != null" >
        SVALIDSTATE = #{svalidstate,jdbcType=DECIMAL},
      </if>
      <if test="sparent != null" >
        SPARENT = #{sparent,jdbcType=VARCHAR},
      </if>
      <if test="slevel != null" >
        SLEVEL = #{slevel,jdbcType=DECIMAL},
      </if>
      <if test="sphone != null" >
        SPHONE = #{sphone,jdbcType=VARCHAR},
      </if>
      <if test="sfax != null" >
        SFAX = #{sfax,jdbcType=VARCHAR},
      </if>
      <if test="saddress != null" >
        SADDRESS = #{saddress,jdbcType=VARCHAR},
      </if>
      <if test="szip != null" >
        SZIP = #{szip,jdbcType=VARCHAR},
      </if>
      <if test="sdescription != null" >
        SDESCRIPTION = #{sdescription,jdbcType=VARCHAR},
      </if>
      <if test="spersonid != null" >
        SPERSONID = #{spersonid,jdbcType=VARCHAR},
      </if>
      <if test="snodekind != null" >
        SNODEKIND = #{snodekind,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        VERSION = #{version,jdbcType=DECIMAL},
      </if>
    </set>
    where SID = #{sid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yufei.ssm.system.po.SysOporg" >
    update SYS_OPORG
    set SNAME = #{sname,jdbcType=VARCHAR},
      SCODE = #{scode,jdbcType=VARCHAR},
      SLONGNAME = #{slongname,jdbcType=VARCHAR},
      SFNAME = #{sfname,jdbcType=VARCHAR},
      SFCODE = #{sfcode,jdbcType=VARCHAR},
      SFID = #{sfid,jdbcType=VARCHAR},
      SORGKINDID = #{sorgkindid,jdbcType=VARCHAR},
      SSEQUENCE = #{ssequence,jdbcType=VARCHAR},
      SVALIDSTATE = #{svalidstate,jdbcType=DECIMAL},
      SPARENT = #{sparent,jdbcType=VARCHAR},
      SLEVEL = #{slevel,jdbcType=DECIMAL},
      SPHONE = #{sphone,jdbcType=VARCHAR},
      SFAX = #{sfax,jdbcType=VARCHAR},
      SADDRESS = #{saddress,jdbcType=VARCHAR},
      SZIP = #{szip,jdbcType=VARCHAR},
      SDESCRIPTION = #{sdescription,jdbcType=VARCHAR},
      SPERSONID = #{spersonid,jdbcType=VARCHAR},
      SNODEKIND = #{snodekind,jdbcType=VARCHAR},
      VERSION = #{version,jdbcType=DECIMAL}
    where SID = #{sid,jdbcType=VARCHAR}
  </update>
  
  <update id="updateOrgPathnodes" parameterType="java.util.Map">
		UPDATE SYS_OPORG o
		<set>
			<if test="newname != null">
				SFNAME=replace(o.sfname,#{oldname,jdbcType=VARCHAR},#{newname,jdbcType=VARCHAR})
				,
			</if>
			<if test="newcode != null">

				SFCODE=replace(o.sfcode,#{oldcode,jdbcType=VARCHAR},#{newcode,jdbcType=VARCHAR})
				,
			</if>
			<if test="personId!=null and personId !='' and personId !='undefined'">
               SNAME=#{newcode,jdbcType=VARCHAR},SCODE=#{newcode,jdbcType=VARCHAR},
			</if>
		</set>
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="id!=null and id !='' and id !='undefined'">
				<![CDATA[ and o.SFID like  '%'||#{id}||'%' ]]>
			</if>
			<if test="personId!=null and personId !='' and personId !='undefined'">
			 and o.SPERSONID =#{personId}
			</if>
		</trim>

	</update>
</mapper>