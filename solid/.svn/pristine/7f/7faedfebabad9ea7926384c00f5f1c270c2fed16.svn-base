package cn.yufei.ssm.system.service.impl;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;

import cn.yufei.ssm.system.core.data.GridData;
import cn.yufei.ssm.system.exception.CustomException;
import cn.yufei.ssm.system.mapper.SysOporgMapper;
import cn.yufei.ssm.system.po.OrgTree;
import cn.yufei.ssm.system.po.SysOporg;
import cn.yufei.ssm.system.po.SysOporgExample;
import cn.yufei.ssm.system.po.SysOporgExample.Criteria;
import cn.yufei.ssm.system.service.SysOrgService;
import cn.yufei.ssm.system.utils.OrgUtils;
import cn.yufei.ssm.system.utils.StringUtils;

@Service
@Scope("singleton")
public class SysOrgServiceImpl implements SysOrgService{
	
	@Autowired
	private SysOporgMapper sysOporgMapper;
	
	


	@Override
	public List<SysOporg> getChildOrgListByID(String id) throws Exception {
		List<SysOporg> list=null;
		SysOporgExample orgExample=new SysOporgExample();
		SysOporgExample.Criteria criteria=orgExample.createCriteria();
		if(StringUtils.isEmpty(id)){
			criteria.andSparentIsNull();
		}else{
			criteria.andSparentEqualTo(id);
		}
		list=sysOporgMapper.selectByExample(orgExample);
		return list;
	}


	@Override
	public List<SysOporg> getParentOrgListByID(String id) throws Exception {
		if(StringUtils.isEmpty(id)){
			throw new CustomException("getParentOrgListByID()---id不能为空");
		}
		List<SysOporg> listOrg=getParent(id);
		return listOrg;
	}
	//根据id查询父级信息
	private List<SysOporg> getParent(String id) throws Exception{
		List<SysOporg> listOrg=new ArrayList<SysOporg>();
		SysOporgExample orgExample=new SysOporgExample();
		SysOporgExample.Criteria criteria=orgExample.createCriteria();
		criteria.andSparentEqualTo(id);
		List<SysOporg> list=sysOporgMapper.selectByExample(orgExample);
		if(list!=null){
	    	for(SysOporg orgs:list){
	    		SysOporg org=orgs;
	    		listOrg.add((SysOporg) getParent(org.getSparent()));
	    	}
	    }
		return listOrg;
	}


	@Override
	public boolean isParentNode(String id) throws Exception {
		if(StringUtils.isEmpty(id)){
			throw new CustomException("isParentNode()---id不能为空");
		}
		boolean isParent=false;
		SysOporgExample orgExample=new SysOporgExample();
		SysOporgExample.Criteria criteria=orgExample.createCriteria();
		criteria.andSparentEqualTo(id);
		List<SysOporg> list=sysOporgMapper.selectByExample(orgExample);
		if(list.size()>0){
			isParent=true;
		}
		return isParent;
	}
	//展开机构节点
	@Override
	public boolean isOpen(String parentId){
		if(StringUtils.isEmpty(parentId)){
			return true;
		}else{
			return false;
		}
	}


	@Override
	public List<OrgTree> getOrgTreeNode(List<SysOporg> orgNode) throws Exception {
		List<OrgTree> tree=new ArrayList<OrgTree>();
		OrgTree orgTree=null;
		//添加虚根
		for(SysOporg org:orgNode){
			orgTree=new OrgTree();
			orgTree.setId(org.getSid());
			orgTree.setCode(org.getScode());
			orgTree.setName(org.getSname());
			orgTree.setShortName(org.getSlongname());
			orgTree.setFullName(org.getSfname());
			orgTree.setFullCode(org.getSfcode());
			orgTree.setFullId(org.getSfid());
			orgTree.setParent(org.getSparent());
			orgTree.setSequence(org.getSsequence());
			orgTree.setValidstate(org.getSvalidstate());
			orgTree.setLevel(org.getSlevel());
			orgTree.setPhone(org.getSphone());
			orgTree.setFax(org.getSfax());
			orgTree.setAddress(org.getSaddress());
			orgTree.setZip(org.getSzip());
			orgTree.setDescription(org.getSdescription());
			orgTree.setPersonId(org.getSpersonid());
			orgTree.setKind(org.getSorgkindid());
			orgTree.setNodeKind(org.getSnodekind());
			orgTree.setIsParent(this.isParentNode(org.getSid()));
			orgTree.setOpen(this.isOpen(org.getSparent()));
			//设置节点图标
			orgTree.setIcon(OrgUtils.getIcon(org.getSorgkindid()));
			tree.add(orgTree);
		}
		return tree;
	}


	@Override
	public GridData findByTextOrgData(String inputText,int page,int rows) throws Exception {
		if(StringUtils.isEmpty(inputText)){
			throw new CustomException("findByTextOrgData()---输入的内容不能为空");
		}
		SysOporgExample orgExample=new SysOporgExample();
		Criteria criteria=orgExample.or();
		criteria.andSnameLike("%" +inputText+"%");
		Criteria criteria1=orgExample.or();
		criteria1.andScodeLike("%"+inputText+"%");
		Criteria criteria2=orgExample.or();
		criteria2.andSlongnameLike("%"+inputText+"%");
		Criteria criteria3=orgExample.or();
		criteria3.andSfnameLike("%"+inputText+"%");
		PageHelper.startPage(page, rows);
		PageHelper.orderBy("scode desc");
		PageInfo<SysOporg> pageInfo = new PageInfo<SysOporg>(sysOporgMapper.selectByExample(orgExample));
		GridData datagrid = new GridData(pageInfo.getTotal(),pageInfo.getList());
		return datagrid;
	}


	@Override
	public GridData findByOrgListOnTreeClick(String orgTreeId,String inputText,int page,int rows) throws Exception {
		SysOporgExample orgExample=new SysOporgExample();
		if(StringUtils.isEmpty(orgTreeId)){
			Criteria criteria=orgExample.or();
			criteria.andSparentIsNull();
			Criteria criteria1=orgExample.or();
			criteria1.andSidIsNull();
			if(!StringUtils.isEmpty(inputText)){
				SysOporgExample.Criteria criteria3=orgExample.createCriteria();
				criteria3.andSnameLike("%"+inputText+"%");
			}
		}else{
			SysOporgExample.Criteria criteria=orgExample.createCriteria();
			criteria.andSparentEqualTo(orgTreeId);
			Criteria criteria1=orgExample.or();
			criteria1.andSidEqualTo(orgTreeId);
			if(!StringUtils.isEmpty(inputText)){
				criteria.andSnameLike("%"+inputText+"%");
			}
		}
		PageHelper.startPage(page, rows);
		PageHelper.orderBy("ssequence asc");
		PageInfo<SysOporg> pageInfo = new PageInfo<SysOporg>(sysOporgMapper.selectByExample(orgExample));
		GridData datagrid = new GridData(pageInfo.getTotal(),pageInfo.getList());
		return datagrid;
	}
	
}
