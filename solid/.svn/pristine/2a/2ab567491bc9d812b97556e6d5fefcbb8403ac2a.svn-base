package cn.yufei.ssm.system.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import cn.yufei.ssm.system.core.ApplicationCode;
import cn.yufei.ssm.system.core.data.GridData;
import cn.yufei.ssm.system.core.data.MessageData;
import cn.yufei.ssm.system.po.SysOppermission;
import cn.yufei.ssm.system.service.SysOppermissionService;


@Controller
@RequestMapping("/permission")
public class SysOppermissionController {
	
	@Autowired
	private SysOppermissionService sysOppermissionService;
	
	
	//根据输入内容模糊查询机构信息列表、
	@RequestMapping(value = "/findTextPermissionListData", method = { RequestMethod.GET,RequestMethod.POST })
	public @ResponseBody GridData findTextPermissionListData(String roleId,String inputText,@RequestParam(value = "page", defaultValue = "1", required = false) Integer page,@RequestParam(value = "rows", defaultValue = "5", required = false) Integer rows) throws Exception {
	  GridData datagrid = sysOppermissionService.findByTextOppermissionData(roleId, inputText, page, rows);
		return datagrid;
	}
	
	//分配功能
	@RequestMapping(value = "/allocationPermission", method = { RequestMethod.GET,RequestMethod.POST })
	public @ResponseBody MessageData allocationPermission(String roleId,String json) throws Exception{
		String jsonStr="["+json.substring(0,json.length()-1)+"]";
		System.out.println(jsonStr);
		int count=sysOppermissionService.addPermission(roleId, jsonStr);
		MessageData message = null;
		if (count>0) {
			message = new MessageData(ApplicationCode.SUCCESS.getCode(),
					ApplicationCode.SUCCESS.getMessage());
		} else {
			message = new MessageData(ApplicationCode.FAIL.getCode(),
					ApplicationCode.FAIL.getMessage());
		}
		return message;
	}
	
	//删除功能信息
	@RequestMapping(value = "/deletePermission", method = { RequestMethod.GET,RequestMethod.POST })
	public @ResponseBody MessageData deletePermission(String id) throws Exception{
		int count=sysOppermissionService.deletePermissionByID(id);
		MessageData message = null;
		if (count>0) {
			message = new MessageData(ApplicationCode.SUCCESS.getCode(),
					ApplicationCode.SUCCESS.getMessage());
		} else {
			message = new MessageData(ApplicationCode.FAIL.getCode(),
					ApplicationCode.FAIL.getMessage());
		}
		return message;
	}
	//根据角色id查询功能信息
	@RequestMapping(value = "/findPermissionByRoleID", method = { RequestMethod.GET,RequestMethod.POST })
	public @ResponseBody List<SysOppermission> findPermissionByRoleID(String roleId) throws Exception{
		List<SysOppermission> list=sysOppermissionService.findPermissionByRoleID(roleId);
		return list;
	}

}
