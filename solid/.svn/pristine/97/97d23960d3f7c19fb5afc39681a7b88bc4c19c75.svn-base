<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yufei.ssm.system.mapper.RoleTreeMapper" >

 <sql id="part_where">
 <trim prefix="WHERE" prefixOverrides="AND/OR">
   <if test="inputText!=null and inputText!='' and inputText!='undefined'">
     <![CDATA[   ( code like '%'|| #{inputText} ||'%'  or name like '%'|| #{inputText} ||'%') ]]>
   </if>
 </trim>
 </sql>

  <!-- 角色树 -->
  <select id="findRoleTree" parameterType="string" resultType="cn.yufei.ssm.system.po.RoleTree">
	select id,name,code,parent,fpath from (select t.sid as id,t.sname as
	name,t.scode as code,'' as parent,'/'||t.sid as fpath from sys_basecode
	t where t.stype='role' and t.sisvalid=1
	union all
	select u.sid as id,u.sname as name,u.scode as code,u.srolekind as parent,
	'/'||u.srolekind ||'/'||u.sid as fpath from sys_oprole u) c order by
	code 
</select>

 <select id="findRoleByText" parameterType="string" resultType="cn.yufei.ssm.system.po.RoleTree">
 select id,name,code,parent,fpath from (select t.sid as id,t.sname as
	name,t.scode as code,'' as parent,'/'||t.sid as fpath from sys_basecode
	t where t.stype='role' and t.sisvalid=1
	union all
	select u.sid as id,u.sname as name,u.scode as code,u.srolekind as parent,
	'/'||u.srolekind ||'/'||u.sid as fpath from sys_oprole u) c
	<include refid="part_where"></include>
	 order by code 
 </select>
 
 
 <select id="findNotAuthorizeRole" parameterType="string" resultType="cn.yufei.ssm.system.po.SysOprole">
   select  t.SID, t.SNAME, t.SCODE, t.SCATALOG, t.SROLEKIND, t.SPARENTNAMES, t.SDESCRIPTION, t.SSEQUENCE, t.SVALIDSTATE, 
    t.VERSION from sys_oprole t where not exists (select a.sAuthorizeRoleID from sys_opauthorize a 
    where t.sid = a.sAuthorizeRoleID
           and (a.sorgid =#{orgId}))
 </select>

</mapper>